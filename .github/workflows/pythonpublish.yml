name: Upload Python Package

on:
  workflow_dispatch:
    inputs:
      version:
        description: "Version of the release, only the number in the form '1.4'."
        required: true
  release:
    types: [created]

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v1
    - name: Set up Python
      uses: actions/setup-python@v1
      with:
        python-version: '3.x'
    - name: Install dependencies
      run: |
        if [[ "${GITHUB_EVENT_NAME}" == "workflow_dispatch" ]] ; then \
          RELEASE_VERSION="${{ github.event.inputs.version }}" ; \
        elif [[ "${GITHUB_EVENT_NAME}" == "release" ]] ; then \
          RELEASE_VERSION="$(echo ${GITHUB_REF##refs/tags/v})" ; \
        else \
          echo "Unexpected workflow hook! ${GITHUB_EVENT_NAME}" ; \
          exit 1 ; \
        fi
        python -m pip install --upgrade pip
        ( cd api_${RELEASE_VERSION} ; pip install setuptools wheel twine )
    - name: Build and publish
      env:
        TWINE_USERNAME: ${{ secrets.PYPI_USERNAME }}
        TWINE_PASSWORD: ${{ secrets.PYPI_PASSWORD }}
      run: |
        if [[ "${GITHUB_EVENT_NAME}" == "workflow_dispatch" ]] ; then \
          RELEASE_VERSION="${{ github.event.inputs.version }}" ; \
        elif [[ "${GITHUB_EVENT_NAME}" == "release" ]] ; then \
          RELEASE_VERSION="$(echo ${GITHUB_REF##refs/tags/v})" ; \
        else \
          echo "Unexpected workflow hook! ${GITHUB_EVENT_NAME}" ; \
          exit 1 ; \
        fi
        ( cd api_${RELEASE_VERSION} ; python setup.py sdist bdist_wheel )
                ( cd api_${RELEASE_VERSION} ; twine upload dist/* )

