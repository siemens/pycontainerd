# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: containerd/events/snapshot.proto
"""Generated protocol buffer code."""
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


from containerd.protobuf.plugin import fieldpath_pb2 as containerd_dot_protobuf_dot_plugin_dot_fieldpath__pb2


DESCRIPTOR = _descriptor.FileDescriptor(
  name='containerd/events/snapshot.proto',
  package='containerd.events',
  syntax='proto3',
  serialized_options=b'Z2github.com/containerd/containerd/api/events;events\240\364\036\001',
  create_key=_descriptor._internal_create_key,
  serialized_pb=b'\n containerd/events/snapshot.proto\x12\x11\x63ontainerd.events\x1a*containerd/protobuf/plugin/fieldpath.proto\".\n\x0fSnapshotPrepare\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\x0e\n\x06parent\x18\x02 \x01(\t\"+\n\x0eSnapshotCommit\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\x0c\n\x04name\x18\x02 \x01(\t\"\x1d\n\x0eSnapshotRemove\x12\x0b\n\x03key\x18\x01 \x01(\tB8Z2github.com/containerd/containerd/api/events;events\xa0\xf4\x1e\x01X\x00\x62\x06proto3'
  ,
  dependencies=[containerd_dot_protobuf_dot_plugin_dot_fieldpath__pb2.DESCRIPTOR,])




_SNAPSHOTPREPARE = _descriptor.Descriptor(
  name='SnapshotPrepare',
  full_name='containerd.events.SnapshotPrepare',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='key', full_name='containerd.events.SnapshotPrepare.key', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='parent', full_name='containerd.events.SnapshotPrepare.parent', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=99,
  serialized_end=145,
)


_SNAPSHOTCOMMIT = _descriptor.Descriptor(
  name='SnapshotCommit',
  full_name='containerd.events.SnapshotCommit',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='key', full_name='containerd.events.SnapshotCommit.key', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='name', full_name='containerd.events.SnapshotCommit.name', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=147,
  serialized_end=190,
)


_SNAPSHOTREMOVE = _descriptor.Descriptor(
  name='SnapshotRemove',
  full_name='containerd.events.SnapshotRemove',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='key', full_name='containerd.events.SnapshotRemove.key', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=192,
  serialized_end=221,
)

DESCRIPTOR.message_types_by_name['SnapshotPrepare'] = _SNAPSHOTPREPARE
DESCRIPTOR.message_types_by_name['SnapshotCommit'] = _SNAPSHOTCOMMIT
DESCRIPTOR.message_types_by_name['SnapshotRemove'] = _SNAPSHOTREMOVE
_sym_db.RegisterFileDescriptor(DESCRIPTOR)

SnapshotPrepare = _reflection.GeneratedProtocolMessageType('SnapshotPrepare', (_message.Message,), {
  'DESCRIPTOR' : _SNAPSHOTPREPARE,
  '__module__' : 'containerd.events.snapshot_pb2'
  # @@protoc_insertion_point(class_scope:containerd.events.SnapshotPrepare)
  })
_sym_db.RegisterMessage(SnapshotPrepare)

SnapshotCommit = _reflection.GeneratedProtocolMessageType('SnapshotCommit', (_message.Message,), {
  'DESCRIPTOR' : _SNAPSHOTCOMMIT,
  '__module__' : 'containerd.events.snapshot_pb2'
  # @@protoc_insertion_point(class_scope:containerd.events.SnapshotCommit)
  })
_sym_db.RegisterMessage(SnapshotCommit)

SnapshotRemove = _reflection.GeneratedProtocolMessageType('SnapshotRemove', (_message.Message,), {
  'DESCRIPTOR' : _SNAPSHOTREMOVE,
  '__module__' : 'containerd.events.snapshot_pb2'
  # @@protoc_insertion_point(class_scope:containerd.events.SnapshotRemove)
  })
_sym_db.RegisterMessage(SnapshotRemove)


DESCRIPTOR._options = None
# @@protoc_insertion_point(module_scope)
